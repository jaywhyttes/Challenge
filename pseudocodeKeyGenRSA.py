from fractions import gcd
import math as math
def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
    gcd = b
    return gcd, x, y
#get primes, n and phi
p = 30503658052700946876975567568101188895671323637711162269766929515694383672907288559864555953744565840594001532138835861469986893350700384204443202726588839568388103444805413906736016281455504246484548780448274018317965010216745498875493448093391974177034757124287599954139026771013114048439430400769957207307226051812284481322511799888342695610546509979082245437681643336148667059992107649742390757524250767607252350245791394278449753064462058392249368253525664881031881815159761080231241055818544996528363677414400489160949087660993392996502883978768940111420439193560553491328311340063092696534597699548842885267177
q = 27347354051684008481808273703700993126600727229797633127827710220584391046560217253989173753220831119030718421364456115925424857120415153719971713627759180816935394978451932499862341751575601699456237349076288787037837905761469199771581997607481038422369709298876679103824023983455076963412453601306661545583822150006501635467878178527790947707403118543695949879640251201453383031134069028435689447278621976387187371538157399771700989140445994200978983531149950494939454721820204060128224192154341745462937368751534583026637779379103469206520721901751589513534185354111062487189397072729720400227623164487188506229207

n = p * q
phin = (q-1) * (p-1)
#lowest e is 3, will check later
e = 3

# message
m = 527
print('message ' + str(m))
# gets d and checks e is 1
gcd, a, b = egcd(e,phin)
while True:
    if b == 0:
        e += 1
        gcd, a, b = egcd(e,phin)
    else:
        break
d = a
print(gcd,a,b)
# checks d is not a negative
if d < 0:
    d+=phin
# gets encrypted message
c = pow(m,e,n)
print('Encrypy '+str(c))
#---------------
m = pow(c,d,n)
print('Decrypy ' + str(m))
# gets decrypted message
